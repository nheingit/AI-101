CanvasRenderingContext2D: createLinearGradient() method - Web APIs | MDNSkip to main contentSkip to searchSkip to select languageMDN Web DocsOpen main menuReferencesReferencesOverview / Web TechnologyWeb technology reference for developersHTMLStructure of content on the webCSSCode used to describe document styleJavaScriptGeneral-purpose scripting languageHTTPProtocol for transmitting web resourcesWeb APIsInterfaces for building web applicationsWeb ExtensionsDeveloping extensions for web browsersWeb TechnologyWeb technology reference for developersGuidesGuidesOverview / MDN Learning AreaLearn web developmentMDN Learning AreaLearn web developmentHTMLLearn to structure web content with HTMLCSSLearn to style content using CSSJavaScriptLearn to run scripts in the browserAccessibilityLearn to make the web accessible to allPlusPlusOverviewA customized MDN experienceUpdatesAll browser compatibility updates at a glanceDocumentationLearn how to use MDN PlusFAQFrequently asked questions about MDN PlusBlog NewSearch MDNClear search inputSearchThemeLog inGet MDN PlusReferencesWeb APIsCanvasRenderingContext2DcreateLinearGradient()Article ActionsEnglish (US)In this articleSyntaxExamplesSpecificationsBrowser compatibilitySee alsoCanvasRenderingContext2DInstance propertiescanvasdirectionfillStylefilterfontfontKerningfontStretch
Experimental
fontVariantCaps
Experimental
globalAlphaglobalCompositeOperationimageSmoothingEnabledimageSmoothingQualityletterSpacing
Experimental
lineCaplineDashOffsetlineJoinlineWidthmiterLimitshadowBlurshadowColorshadowOffsetXshadowOffsetYstrokeStyletextAligntextBaselinetextRendering
Experimental
wordSpacing
Experimental
Instance methodsarc()arcTo()beginPath()bezierCurveTo()clearRect()clip()closePath()createConicGradient()createImageData()createLinearGradient() createPattern()createRadialGradient()drawFocusIfNeeded()drawImage()ellipse()fill()fillRect()fillText()getContextAttributes()getImageData()getLineDash()getTransform()isContextLost()
Experimental
isPointInPath()isPointInStroke()lineTo()measureText()moveTo()putImageData()quadraticCurveTo()rect()reset()resetTransform()restore()rotate()roundRect()save()scale()scrollPathIntoView()
Experimental
setLineDash()setTransform()stroke()strokeRect()strokeText()transform()translate()In this articleSyntaxExamplesSpecificationsBrowser compatibilitySee alsoCanvasRenderingContext2D: createLinearGradient() method
  The
  CanvasRenderingContext2D.createLinearGradient()
  method of the Canvas 2D API creates a gradient along the line connecting two given
  coordinates.





  This method returns a linear CanvasGradient. To be applied to a shape,
  the gradient must first be assigned to the
  fillStyle or
  strokeStyle properties.



Note: Gradient coordinates are global, i.e., relative to the current
    coordinate space. When applied to a shape, the coordinates are NOT relative to the
    shape's coordinates.
  
SyntaxcreateLinearGradient(x0, y0, x1, y1)


  The createLinearGradient() method is specified by four parameters defining
  the start and end points of the gradient line.
Parameters
x0

The x-axis coordinate of the start point.

y0

The y-axis coordinate of the start point.

x1

The x-axis coordinate of the end point.

y1

The y-axis coordinate of the end point.

Return valueA linear CanvasGradient initialized with the specified line.Exceptions
NotSupportedError DOMException

Thrown when non-finite values are passed as parameters.

ExamplesFilling a rectangle with a linear gradient
  This example initializes a linear gradient using the
  createLinearGradient() method. Three color stops between the gradient's
  start and end points are then created. Finally, the gradient is assigned to the canvas
  context, and is rendered to a filled rectangle.

HTML
<canvas id="canvas"></canvas>

JavaScript
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

// Create a linear gradient
// The start gradient point is at x=20, y=0
// The end gradient point is at x=220, y=0
const gradient = ctx.createLinearGradient(20, 0, 220, 0);

// Add three color stops
gradient.addColorStop(0, "green");
gradient.addColorStop(0.5, "cyan");
gradient.addColorStop(1, "green");

// Set the fill style and draw a rectangle
ctx.fillStyle = gradient;
ctx.fillRect(20, 20, 200, 100);

ResultSpecificationsSpecificationHTML Standard # dom-context-2d-createlineargradient-devBrowser compatibilityBCD tables only load in the browser with JavaScript enabled. Enable JavaScript to view data.See also
The interface defining this method: CanvasRenderingContext2D
CanvasRenderingContext2D.createRadialGradient()
CanvasRenderingContext2D.createConicGradient()
Found a content problem with this page?Edit the page on GitHub.Report the content issue.View the source on GitHub.Want to get more involved? Learn how to contribute.This page was last modified on Apr 7, 2023 by MDN contributors.MDN logoYour blueprint for a better internet.MDN on TwitterMDN on GitHubMDNAboutBlogCareersAdvertise with usSupportProduct helpReport an issueOur communitiesMDN CommunityMDN ForumMDN ChatDevelopersWeb TechnologiesLearn Web DevelopmentMDN PlusHacks BlogMozilla logoWebsite Privacy NoticeCookiesLegalCommunity Participation GuidelinesVisit Mozilla Corporationâs not-for-profit parent, the Mozilla Foundation.Portions of this content are Â©1998â2023 by individual mozilla.org contributors. Content available under a Creative Commons license.